<?php
/**
 * Generated by XSD2PHP
 *
 * PHP version 5.3
 *
 * @category Util
 * @package  XSD2PHP
 * @author   David Gillen <david.gillen@nexus451.com>
 * @license  GNU GPL - http://www.gnu.org/licenses/gpl.txt
 * @link     https://github.com/davidgillen/XSD2PHP
 */

/**
 * Class representing a Employee
 *
 * @category XSD2PHP
 * @package  XSD2PHP
 * @author   David Gillen <david.gillen@nexus451.com>
 * @license  GNU GPL - http://www.gnu.org/licenses/gpl.txt
 * @link     http://www.nexus451.com
 */
class Employee
{
    public $SheetNo = null;
    public $HKID = null;
    public $TypeOfForm = null;
    public $Surname = null;
    public $GivenName = null;
    public $NameInChinese = null;
    public $Sex = null;
    public $MaritalStatus = null;
    public $PpNum = null;
    public $SpouseName = null;
    public $SpouseHKID = null;
    public $SpousePpNum = null;
    public $ResAddr = null;
    public $AreaCodeResAddr = null;
    public $PosAddr = null;
    public $Capacity = null;
    public $PtPrinEmp = null;
    public $StartDateOfEmp = null;
    public $EndDateOfEmp = null;
    public $PerOfSalary = null;
    public $AmtOfSalary;
    public $PerOfLeavePay = null;
    public $AmtOfLeavePay;
    public $PerOfDirectorFee = null;
    public $AmtOfDirectorFee;
    public $PerOfCommFee = null;
    public $AmtOfCommFee;
    public $PerOfBonus = null;
    public $AmtOfBonus;
    public $PerOfBpEtc = null;
    public $AmtOfBpEtc;
    public $PerOfPayRetire = null;
    public $AmtOfPayRetire;
    public $PerOfSalTaxPaid = null;
    public $AmtOfSalTaxPaid;
    public $PerOfEduBen = null;
    public $AmtOfEduBen;
    public $PerOfGainShareOption = null;
    public $AmtOfGainShareOption;
    public $NatureOtherRAP1 = null;
    public $PerOfOtherRAP1 = null;
    public $AmtOfOtherRAP1;
    public $NatureOtherRAP2 = null;
    public $PerOfOtherRAP2 = null;
    public $AmtOfOtherRAP2;
    public $NatureOtherRAP3 = null;
    public $PerOfOtherRAP3 = null;
    public $AmtOfOtherRAP3;
    public $PerOfPension = null;
    public $AmtOfPension;
    public $TotalIncome = null;
    public $PlaceOfResInd = null;
    public $AddrOfPlace1 = null;
    public $NatureOfPlace1 = null;
    public $PerOfPlace1 = null;
    public $RentPaidEr1;
    public $RentPaidEe1;
    public $RentRefund1;
    public $RentPaidErByEe1;
    public $AddrOfPlace2 = null;
    public $NatureOfPlace2 = null;
    public $PerOfPlace2 = null;
    public $RentPaidEr2;
    public $RentPaidEe2;
    public $RentRefund2;
    public $RentPaidErByEe2;
    public $OverseaIncInd = null;
    public $AmtPaidOverseaCo = null;
    public $NameOfOverseaCo = null;
    public $AddrOfOverseaCo = null;
    public $Remarks = null;

    /**
     * Employee constructor
     *
     * @param string $SheetNo              {1, 6}
     * @param string $HKID                 {0, 9}
     * @param string $TypeOfForm           {0, }
     * @param string $Surname              {1, 20}
     * @param string $GivenName            {1, 55}
     * @param string $NameInChinese        {0, 25}
     * @param string $Sex                  {0, }
     * @param string $MaritalStatus        {0, }
     * @param string $PpNum                {0, 40}
     * @param string $SpouseName           {0, 50}
     * @param string $SpouseHKID           {0, 9}
     * @param string $SpousePpNum          {0, 40}
     * @param string $ResAddr              {0, 90}
     * @param string $AreaCodeResAddr      {0, 1}
     * @param string $PosAddr              {0, 60}
     * @param string $Capacity             {0, 40}
     * @param string $PtPrinEmp            {0, 30}
     * @param string $StartDateOfEmp       {0, }
     * @param string $EndDateOfEmp         {0, }
     * @param string $PerOfSalary          {0, 19}
     * @param string $AmtOfSalary          {, 9}
     * @param string $PerOfLeavePay        {0, 19}
     * @param string $AmtOfLeavePay        {, 9}
     * @param string $PerOfDirectorFee     {0, 19}
     * @param string $AmtOfDirectorFee     {, 9}
     * @param string $PerOfCommFee         {0, 19}
     * @param string $AmtOfCommFee         {, 9}
     * @param string $PerOfBonus           {0, 19}
     * @param string $AmtOfBonus           {, 9}
     * @param string $PerOfBpEtc           {0, 19}
     * @param string $AmtOfBpEtc           {, 9}
     * @param string $PerOfPayRetire       {0, 19}
     * @param string $AmtOfPayRetire       {, 9}
     * @param string $PerOfSalTaxPaid      {0, 19}
     * @param string $AmtOfSalTaxPaid      {, 9}
     * @param string $PerOfEduBen          {0, 19}
     * @param string $AmtOfEduBen          {, 9}
     * @param string $PerOfGainShareOption {0, 19}
     * @param string $AmtOfGainShareOption {, 9}
     * @param string $NatureOtherRAP1      {0, 35}
     * @param string $PerOfOtherRAP1       {0, 19}
     * @param string $AmtOfOtherRAP1       {, 9}
     * @param string $NatureOtherRAP2      {0, 35}
     * @param string $PerOfOtherRAP2       {0, 19}
     * @param string $AmtOfOtherRAP2       {, 9}
     * @param string $NatureOtherRAP3      {0, 35}
     * @param string $PerOfOtherRAP3       {0, 19}
     * @param string $AmtOfOtherRAP3       {, 9}
     * @param string $PerOfPension         {0, 19}
     * @param string $AmtOfPension         {, 9}
     * @param string $TotalIncome          {1, 9}
     * @param string $PlaceOfResInd        {0, }
     * @param string $AddrOfPlace1         {0, 110}
     * @param string $NatureOfPlace1       {0, 19}
     * @param string $PerOfPlace1          {0, 26}
     * @param string $RentPaidEr1          {, 7}
     * @param string $RentPaidEe1          {, 7}
     * @param string $RentRefund1          {, 7}
     * @param string $RentPaidErByEe1      {, 7}
     * @param string $AddrOfPlace2         {0, 110}
     * @param string $NatureOfPlace2       {0, 19}
     * @param string $PerOfPlace2          {0, 26}
     * @param string $RentPaidEr2          {, 7}
     * @param string $RentPaidEe2          {, 7}
     * @param string $RentRefund2          {, 7}
     * @param string $RentPaidErByEe2      {, 7}
     * @param string $OverseaIncInd        {0, }
     * @param string $AmtPaidOverseaCo     {0, 20}
     * @param string $NameOfOverseaCo      {0, 60}
     * @param string $AddrOfOverseaCo      {0, 60}
     * @param string $Remarks              {0, 60}
     */
    public function __construct($SheetNo = null, $HKID = null, $TypeOfForm = null, $Surname = null, $GivenName = null, $NameInChinese = null, $Sex = null, $MaritalStatus = null, $PpNum = null, $SpouseName = null, $SpouseHKID = null, $SpousePpNum = null, $ResAddr = null, $AreaCodeResAddr = null, $PosAddr = null, $Capacity = null, $PtPrinEmp = null, $StartDateOfEmp = null, $EndDateOfEmp = null, $PerOfSalary = null, $AmtOfSalary = null, $PerOfLeavePay = null, $AmtOfLeavePay = null, $PerOfDirectorFee = null, $AmtOfDirectorFee = null, $PerOfCommFee = null, $AmtOfCommFee = null, $PerOfBonus = null, $AmtOfBonus = null, $PerOfBpEtc = null, $AmtOfBpEtc = null, $PerOfPayRetire = null, $AmtOfPayRetire = null, $PerOfSalTaxPaid = null, $AmtOfSalTaxPaid = null, $PerOfEduBen = null, $AmtOfEduBen = null, $PerOfGainShareOption = null, $AmtOfGainShareOption = null, $NatureOtherRAP1 = null, $PerOfOtherRAP1 = null, $AmtOfOtherRAP1 = null, $NatureOtherRAP2 = null, $PerOfOtherRAP2 = null, $AmtOfOtherRAP2 = null, $NatureOtherRAP3 = null, $PerOfOtherRAP3 = null, $AmtOfOtherRAP3 = null, $PerOfPension = null, $AmtOfPension = null, $TotalIncome = null, $PlaceOfResInd = null, $AddrOfPlace1 = null, $NatureOfPlace1 = null, $PerOfPlace1 = null, $RentPaidEr1 = null, $RentPaidEe1 = null, $RentRefund1 = null, $RentPaidErByEe1 = null, $AddrOfPlace2 = null, $NatureOfPlace2 = null, $PerOfPlace2 = null, $RentPaidEr2 = null, $RentPaidEe2 = null, $RentRefund2 = null, $RentPaidErByEe2 = null, $OverseaIncInd = null, $AmtPaidOverseaCo = null, $NameOfOverseaCo = null, $AddrOfOverseaCo = null, $Remarks = null)
    {
        if ( $SheetNo == null ) {
            throw new Exception('$SheetNo must be set.');
        }
        $item = $SheetNo;
        if ( strlen($item) < 1 ) {
            throw new Exception('$SheetNo must be at least 1 characters.');
        } elseif ( strlen($item) > 6 ) {
            throw new Exception('$SheetNo must be no more than 6 characters.');
        } else {
            $this->SheetNo = $item;
        }
        if ( $HKID == null ) {
            throw new Exception('$HKID must be set.');
        }
        $item = $HKID;
        if ( strlen($item) < 0 ) {
            throw new Exception('$HKID must be at least 0 characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$HKID must be no more than 9 characters.');
        } else {
            $this->HKID = $item;
        }
        if ( $TypeOfForm == null ) {
            throw new Exception('$TypeOfForm must be set.');
        }
        $item = $TypeOfForm;
        if ( strlen($item) < 0 ) {
            throw new Exception('$TypeOfForm must be at least 0 characters.');
        } elseif ( strlen($item) >  ) {
            throw new Exception('$TypeOfForm must be no more than  characters.');
        } else {
            $this->TypeOfForm = $item;
        }
        if ( $Surname == null ) {
            throw new Exception('$Surname must be set.');
        }
        $item = $Surname;
        if ( strlen($item) < 1 ) {
            throw new Exception('$Surname must be at least 1 characters.');
        } elseif ( strlen($item) > 20 ) {
            throw new Exception('$Surname must be no more than 20 characters.');
        } else {
            $this->Surname = $item;
        }
        if ( $GivenName == null ) {
            throw new Exception('$GivenName must be set.');
        }
        $item = $GivenName;
        if ( strlen($item) < 1 ) {
            throw new Exception('$GivenName must be at least 1 characters.');
        } elseif ( strlen($item) > 55 ) {
            throw new Exception('$GivenName must be no more than 55 characters.');
        } else {
            $this->GivenName = $item;
        }
        if ( $NameInChinese == null ) {
            throw new Exception('$NameInChinese must be set.');
        }
        $item = $NameInChinese;
        if ( strlen($item) < 0 ) {
            throw new Exception('$NameInChinese must be at least 0 characters.');
        } elseif ( strlen($item) > 25 ) {
            throw new Exception('$NameInChinese must be no more than 25 characters.');
        } else {
            $this->NameInChinese = $item;
        }
        if ( $Sex == null ) {
            throw new Exception('$Sex must be set.');
        }
        $item = $Sex;
        if ( strlen($item) < 0 ) {
            throw new Exception('$Sex must be at least 0 characters.');
        } elseif ( strlen($item) >  ) {
            throw new Exception('$Sex must be no more than  characters.');
        } else {
            $this->Sex = $item;
        }
        if ( $MaritalStatus == null ) {
            throw new Exception('$MaritalStatus must be set.');
        }
        $item = $MaritalStatus;
        if ( strlen($item) < 0 ) {
            throw new Exception('$MaritalStatus must be at least 0 characters.');
        } elseif ( strlen($item) >  ) {
            throw new Exception('$MaritalStatus must be no more than  characters.');
        } else {
            $this->MaritalStatus = $item;
        }
        if ( $PpNum == null ) {
            throw new Exception('$PpNum must be set.');
        }
        $item = $PpNum;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PpNum must be at least 0 characters.');
        } elseif ( strlen($item) > 40 ) {
            throw new Exception('$PpNum must be no more than 40 characters.');
        } else {
            $this->PpNum = $item;
        }
        if ( $SpouseName == null ) {
            throw new Exception('$SpouseName must be set.');
        }
        $item = $SpouseName;
        if ( strlen($item) < 0 ) {
            throw new Exception('$SpouseName must be at least 0 characters.');
        } elseif ( strlen($item) > 50 ) {
            throw new Exception('$SpouseName must be no more than 50 characters.');
        } else {
            $this->SpouseName = $item;
        }
        if ( $SpouseHKID == null ) {
            throw new Exception('$SpouseHKID must be set.');
        }
        $item = $SpouseHKID;
        if ( strlen($item) < 0 ) {
            throw new Exception('$SpouseHKID must be at least 0 characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$SpouseHKID must be no more than 9 characters.');
        } else {
            $this->SpouseHKID = $item;
        }
        if ( $SpousePpNum == null ) {
            throw new Exception('$SpousePpNum must be set.');
        }
        $item = $SpousePpNum;
        if ( strlen($item) < 0 ) {
            throw new Exception('$SpousePpNum must be at least 0 characters.');
        } elseif ( strlen($item) > 40 ) {
            throw new Exception('$SpousePpNum must be no more than 40 characters.');
        } else {
            $this->SpousePpNum = $item;
        }
        if ( $ResAddr == null ) {
            throw new Exception('$ResAddr must be set.');
        }
        $item = $ResAddr;
        if ( strlen($item) < 0 ) {
            throw new Exception('$ResAddr must be at least 0 characters.');
        } elseif ( strlen($item) > 90 ) {
            throw new Exception('$ResAddr must be no more than 90 characters.');
        } else {
            $this->ResAddr = $item;
        }
        if ( $AreaCodeResAddr == null ) {
            throw new Exception('$AreaCodeResAddr must be set.');
        }
        $item = $AreaCodeResAddr;
        if ( strlen($item) < 0 ) {
            throw new Exception('$AreaCodeResAddr must be at least 0 characters.');
        } elseif ( strlen($item) > 1 ) {
            throw new Exception('$AreaCodeResAddr must be no more than 1 characters.');
        } else {
            $this->AreaCodeResAddr = $item;
        }
        if ( $PosAddr == null ) {
            throw new Exception('$PosAddr must be set.');
        }
        $item = $PosAddr;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PosAddr must be at least 0 characters.');
        } elseif ( strlen($item) > 60 ) {
            throw new Exception('$PosAddr must be no more than 60 characters.');
        } else {
            $this->PosAddr = $item;
        }
        if ( $Capacity == null ) {
            throw new Exception('$Capacity must be set.');
        }
        $item = $Capacity;
        if ( strlen($item) < 0 ) {
            throw new Exception('$Capacity must be at least 0 characters.');
        } elseif ( strlen($item) > 40 ) {
            throw new Exception('$Capacity must be no more than 40 characters.');
        } else {
            $this->Capacity = $item;
        }
        if ( $PtPrinEmp == null ) {
            throw new Exception('$PtPrinEmp must be set.');
        }
        $item = $PtPrinEmp;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PtPrinEmp must be at least 0 characters.');
        } elseif ( strlen($item) > 30 ) {
            throw new Exception('$PtPrinEmp must be no more than 30 characters.');
        } else {
            $this->PtPrinEmp = $item;
        }
        if ( $StartDateOfEmp == null ) {
            throw new Exception('$StartDateOfEmp must be set.');
        }
        $item = $StartDateOfEmp;
        if ( strlen($item) < 0 ) {
            throw new Exception('$StartDateOfEmp must be at least 0 characters.');
        } elseif ( strlen($item) >  ) {
            throw new Exception('$StartDateOfEmp must be no more than  characters.');
        } else {
            $this->StartDateOfEmp = $item;
        }
        if ( $EndDateOfEmp == null ) {
            throw new Exception('$EndDateOfEmp must be set.');
        }
        $item = $EndDateOfEmp;
        if ( strlen($item) < 0 ) {
            throw new Exception('$EndDateOfEmp must be at least 0 characters.');
        } elseif ( strlen($item) >  ) {
            throw new Exception('$EndDateOfEmp must be no more than  characters.');
        } else {
            $this->EndDateOfEmp = $item;
        }
        if ( $PerOfSalary == null ) {
            throw new Exception('$PerOfSalary must be set.');
        }
        $item = $PerOfSalary;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfSalary must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfSalary must be no more than 19 characters.');
        } else {
            $this->PerOfSalary = $item;
        }
        if ( $AmtOfSalary == null ) {
            throw new Exception('$AmtOfSalary must be set.');
        }
        $item = $AmtOfSalary;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfSalary must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfSalary must be no more than 9 characters.');
        } else {
            $this->AmtOfSalary = $item;
        }
        if ( $PerOfLeavePay == null ) {
            throw new Exception('$PerOfLeavePay must be set.');
        }
        $item = $PerOfLeavePay;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfLeavePay must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfLeavePay must be no more than 19 characters.');
        } else {
            $this->PerOfLeavePay = $item;
        }
        if ( $AmtOfLeavePay == null ) {
            throw new Exception('$AmtOfLeavePay must be set.');
        }
        $item = $AmtOfLeavePay;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfLeavePay must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfLeavePay must be no more than 9 characters.');
        } else {
            $this->AmtOfLeavePay = $item;
        }
        if ( $PerOfDirectorFee == null ) {
            throw new Exception('$PerOfDirectorFee must be set.');
        }
        $item = $PerOfDirectorFee;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfDirectorFee must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfDirectorFee must be no more than 19 characters.');
        } else {
            $this->PerOfDirectorFee = $item;
        }
        if ( $AmtOfDirectorFee == null ) {
            throw new Exception('$AmtOfDirectorFee must be set.');
        }
        $item = $AmtOfDirectorFee;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfDirectorFee must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfDirectorFee must be no more than 9 characters.');
        } else {
            $this->AmtOfDirectorFee = $item;
        }
        if ( $PerOfCommFee == null ) {
            throw new Exception('$PerOfCommFee must be set.');
        }
        $item = $PerOfCommFee;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfCommFee must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfCommFee must be no more than 19 characters.');
        } else {
            $this->PerOfCommFee = $item;
        }
        if ( $AmtOfCommFee == null ) {
            throw new Exception('$AmtOfCommFee must be set.');
        }
        $item = $AmtOfCommFee;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfCommFee must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfCommFee must be no more than 9 characters.');
        } else {
            $this->AmtOfCommFee = $item;
        }
        if ( $PerOfBonus == null ) {
            throw new Exception('$PerOfBonus must be set.');
        }
        $item = $PerOfBonus;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfBonus must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfBonus must be no more than 19 characters.');
        } else {
            $this->PerOfBonus = $item;
        }
        if ( $AmtOfBonus == null ) {
            throw new Exception('$AmtOfBonus must be set.');
        }
        $item = $AmtOfBonus;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfBonus must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfBonus must be no more than 9 characters.');
        } else {
            $this->AmtOfBonus = $item;
        }
        if ( $PerOfBpEtc == null ) {
            throw new Exception('$PerOfBpEtc must be set.');
        }
        $item = $PerOfBpEtc;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfBpEtc must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfBpEtc must be no more than 19 characters.');
        } else {
            $this->PerOfBpEtc = $item;
        }
        if ( $AmtOfBpEtc == null ) {
            throw new Exception('$AmtOfBpEtc must be set.');
        }
        $item = $AmtOfBpEtc;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfBpEtc must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfBpEtc must be no more than 9 characters.');
        } else {
            $this->AmtOfBpEtc = $item;
        }
        if ( $PerOfPayRetire == null ) {
            throw new Exception('$PerOfPayRetire must be set.');
        }
        $item = $PerOfPayRetire;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfPayRetire must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfPayRetire must be no more than 19 characters.');
        } else {
            $this->PerOfPayRetire = $item;
        }
        if ( $AmtOfPayRetire == null ) {
            throw new Exception('$AmtOfPayRetire must be set.');
        }
        $item = $AmtOfPayRetire;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfPayRetire must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfPayRetire must be no more than 9 characters.');
        } else {
            $this->AmtOfPayRetire = $item;
        }
        if ( $PerOfSalTaxPaid == null ) {
            throw new Exception('$PerOfSalTaxPaid must be set.');
        }
        $item = $PerOfSalTaxPaid;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfSalTaxPaid must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfSalTaxPaid must be no more than 19 characters.');
        } else {
            $this->PerOfSalTaxPaid = $item;
        }
        if ( $AmtOfSalTaxPaid == null ) {
            throw new Exception('$AmtOfSalTaxPaid must be set.');
        }
        $item = $AmtOfSalTaxPaid;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfSalTaxPaid must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfSalTaxPaid must be no more than 9 characters.');
        } else {
            $this->AmtOfSalTaxPaid = $item;
        }
        if ( $PerOfEduBen == null ) {
            throw new Exception('$PerOfEduBen must be set.');
        }
        $item = $PerOfEduBen;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfEduBen must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfEduBen must be no more than 19 characters.');
        } else {
            $this->PerOfEduBen = $item;
        }
        if ( $AmtOfEduBen == null ) {
            throw new Exception('$AmtOfEduBen must be set.');
        }
        $item = $AmtOfEduBen;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfEduBen must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfEduBen must be no more than 9 characters.');
        } else {
            $this->AmtOfEduBen = $item;
        }
        if ( $PerOfGainShareOption == null ) {
            throw new Exception('$PerOfGainShareOption must be set.');
        }
        $item = $PerOfGainShareOption;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfGainShareOption must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfGainShareOption must be no more than 19 characters.');
        } else {
            $this->PerOfGainShareOption = $item;
        }
        if ( $AmtOfGainShareOption == null ) {
            throw new Exception('$AmtOfGainShareOption must be set.');
        }
        $item = $AmtOfGainShareOption;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfGainShareOption must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfGainShareOption must be no more than 9 characters.');
        } else {
            $this->AmtOfGainShareOption = $item;
        }
        if ( $NatureOtherRAP1 == null ) {
            throw new Exception('$NatureOtherRAP1 must be set.');
        }
        $item = $NatureOtherRAP1;
        if ( strlen($item) < 0 ) {
            throw new Exception('$NatureOtherRAP1 must be at least 0 characters.');
        } elseif ( strlen($item) > 35 ) {
            throw new Exception('$NatureOtherRAP1 must be no more than 35 characters.');
        } else {
            $this->NatureOtherRAP1 = $item;
        }
        if ( $PerOfOtherRAP1 == null ) {
            throw new Exception('$PerOfOtherRAP1 must be set.');
        }
        $item = $PerOfOtherRAP1;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfOtherRAP1 must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfOtherRAP1 must be no more than 19 characters.');
        } else {
            $this->PerOfOtherRAP1 = $item;
        }
        if ( $AmtOfOtherRAP1 == null ) {
            throw new Exception('$AmtOfOtherRAP1 must be set.');
        }
        $item = $AmtOfOtherRAP1;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfOtherRAP1 must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfOtherRAP1 must be no more than 9 characters.');
        } else {
            $this->AmtOfOtherRAP1 = $item;
        }
        if ( $NatureOtherRAP2 == null ) {
            throw new Exception('$NatureOtherRAP2 must be set.');
        }
        $item = $NatureOtherRAP2;
        if ( strlen($item) < 0 ) {
            throw new Exception('$NatureOtherRAP2 must be at least 0 characters.');
        } elseif ( strlen($item) > 35 ) {
            throw new Exception('$NatureOtherRAP2 must be no more than 35 characters.');
        } else {
            $this->NatureOtherRAP2 = $item;
        }
        if ( $PerOfOtherRAP2 == null ) {
            throw new Exception('$PerOfOtherRAP2 must be set.');
        }
        $item = $PerOfOtherRAP2;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfOtherRAP2 must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfOtherRAP2 must be no more than 19 characters.');
        } else {
            $this->PerOfOtherRAP2 = $item;
        }
        if ( $AmtOfOtherRAP2 == null ) {
            throw new Exception('$AmtOfOtherRAP2 must be set.');
        }
        $item = $AmtOfOtherRAP2;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfOtherRAP2 must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfOtherRAP2 must be no more than 9 characters.');
        } else {
            $this->AmtOfOtherRAP2 = $item;
        }
        if ( $NatureOtherRAP3 == null ) {
            throw new Exception('$NatureOtherRAP3 must be set.');
        }
        $item = $NatureOtherRAP3;
        if ( strlen($item) < 0 ) {
            throw new Exception('$NatureOtherRAP3 must be at least 0 characters.');
        } elseif ( strlen($item) > 35 ) {
            throw new Exception('$NatureOtherRAP3 must be no more than 35 characters.');
        } else {
            $this->NatureOtherRAP3 = $item;
        }
        if ( $PerOfOtherRAP3 == null ) {
            throw new Exception('$PerOfOtherRAP3 must be set.');
        }
        $item = $PerOfOtherRAP3;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfOtherRAP3 must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfOtherRAP3 must be no more than 19 characters.');
        } else {
            $this->PerOfOtherRAP3 = $item;
        }
        if ( $AmtOfOtherRAP3 == null ) {
            throw new Exception('$AmtOfOtherRAP3 must be set.');
        }
        $item = $AmtOfOtherRAP3;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfOtherRAP3 must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfOtherRAP3 must be no more than 9 characters.');
        } else {
            $this->AmtOfOtherRAP3 = $item;
        }
        if ( $PerOfPension == null ) {
            throw new Exception('$PerOfPension must be set.');
        }
        $item = $PerOfPension;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfPension must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$PerOfPension must be no more than 19 characters.');
        } else {
            $this->PerOfPension = $item;
        }
        if ( $AmtOfPension == null ) {
            throw new Exception('$AmtOfPension must be set.');
        }
        $item = $AmtOfPension;
        if ( strlen($item) <  ) {
            throw new Exception('$AmtOfPension must be at least  characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$AmtOfPension must be no more than 9 characters.');
        } else {
            $this->AmtOfPension = $item;
        }
        if ( $TotalIncome == null ) {
            throw new Exception('$TotalIncome must be set.');
        }
        $item = $TotalIncome;
        if ( strlen($item) < 1 ) {
            throw new Exception('$TotalIncome must be at least 1 characters.');
        } elseif ( strlen($item) > 9 ) {
            throw new Exception('$TotalIncome must be no more than 9 characters.');
        } else {
            $this->TotalIncome = $item;
        }
        if ( $PlaceOfResInd == null ) {
            throw new Exception('$PlaceOfResInd must be set.');
        }
        $item = $PlaceOfResInd;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PlaceOfResInd must be at least 0 characters.');
        } elseif ( strlen($item) >  ) {
            throw new Exception('$PlaceOfResInd must be no more than  characters.');
        } else {
            $this->PlaceOfResInd = $item;
        }
        if ( $AddrOfPlace1 == null ) {
            throw new Exception('$AddrOfPlace1 must be set.');
        }
        $item = $AddrOfPlace1;
        if ( strlen($item) < 0 ) {
            throw new Exception('$AddrOfPlace1 must be at least 0 characters.');
        } elseif ( strlen($item) > 110 ) {
            throw new Exception('$AddrOfPlace1 must be no more than 110 characters.');
        } else {
            $this->AddrOfPlace1 = $item;
        }
        if ( $NatureOfPlace1 == null ) {
            throw new Exception('$NatureOfPlace1 must be set.');
        }
        $item = $NatureOfPlace1;
        if ( strlen($item) < 0 ) {
            throw new Exception('$NatureOfPlace1 must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$NatureOfPlace1 must be no more than 19 characters.');
        } else {
            $this->NatureOfPlace1 = $item;
        }
        if ( $PerOfPlace1 == null ) {
            throw new Exception('$PerOfPlace1 must be set.');
        }
        $item = $PerOfPlace1;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfPlace1 must be at least 0 characters.');
        } elseif ( strlen($item) > 26 ) {
            throw new Exception('$PerOfPlace1 must be no more than 26 characters.');
        } else {
            $this->PerOfPlace1 = $item;
        }
        if ( $RentPaidEr1 == null ) {
            throw new Exception('$RentPaidEr1 must be set.');
        }
        $item = $RentPaidEr1;
        if ( strlen($item) <  ) {
            throw new Exception('$RentPaidEr1 must be at least  characters.');
        } elseif ( strlen($item) > 7 ) {
            throw new Exception('$RentPaidEr1 must be no more than 7 characters.');
        } else {
            $this->RentPaidEr1 = $item;
        }
        if ( $RentPaidEe1 == null ) {
            throw new Exception('$RentPaidEe1 must be set.');
        }
        $item = $RentPaidEe1;
        if ( strlen($item) <  ) {
            throw new Exception('$RentPaidEe1 must be at least  characters.');
        } elseif ( strlen($item) > 7 ) {
            throw new Exception('$RentPaidEe1 must be no more than 7 characters.');
        } else {
            $this->RentPaidEe1 = $item;
        }
        if ( $RentRefund1 == null ) {
            throw new Exception('$RentRefund1 must be set.');
        }
        $item = $RentRefund1;
        if ( strlen($item) <  ) {
            throw new Exception('$RentRefund1 must be at least  characters.');
        } elseif ( strlen($item) > 7 ) {
            throw new Exception('$RentRefund1 must be no more than 7 characters.');
        } else {
            $this->RentRefund1 = $item;
        }
        if ( $RentPaidErByEe1 == null ) {
            throw new Exception('$RentPaidErByEe1 must be set.');
        }
        $item = $RentPaidErByEe1;
        if ( strlen($item) <  ) {
            throw new Exception('$RentPaidErByEe1 must be at least  characters.');
        } elseif ( strlen($item) > 7 ) {
            throw new Exception('$RentPaidErByEe1 must be no more than 7 characters.');
        } else {
            $this->RentPaidErByEe1 = $item;
        }
        if ( $AddrOfPlace2 == null ) {
            throw new Exception('$AddrOfPlace2 must be set.');
        }
        $item = $AddrOfPlace2;
        if ( strlen($item) < 0 ) {
            throw new Exception('$AddrOfPlace2 must be at least 0 characters.');
        } elseif ( strlen($item) > 110 ) {
            throw new Exception('$AddrOfPlace2 must be no more than 110 characters.');
        } else {
            $this->AddrOfPlace2 = $item;
        }
        if ( $NatureOfPlace2 == null ) {
            throw new Exception('$NatureOfPlace2 must be set.');
        }
        $item = $NatureOfPlace2;
        if ( strlen($item) < 0 ) {
            throw new Exception('$NatureOfPlace2 must be at least 0 characters.');
        } elseif ( strlen($item) > 19 ) {
            throw new Exception('$NatureOfPlace2 must be no more than 19 characters.');
        } else {
            $this->NatureOfPlace2 = $item;
        }
        if ( $PerOfPlace2 == null ) {
            throw new Exception('$PerOfPlace2 must be set.');
        }
        $item = $PerOfPlace2;
        if ( strlen($item) < 0 ) {
            throw new Exception('$PerOfPlace2 must be at least 0 characters.');
        } elseif ( strlen($item) > 26 ) {
            throw new Exception('$PerOfPlace2 must be no more than 26 characters.');
        } else {
            $this->PerOfPlace2 = $item;
        }
        if ( $RentPaidEr2 == null ) {
            throw new Exception('$RentPaidEr2 must be set.');
        }
        $item = $RentPaidEr2;
        if ( strlen($item) <  ) {
            throw new Exception('$RentPaidEr2 must be at least  characters.');
        } elseif ( strlen($item) > 7 ) {
            throw new Exception('$RentPaidEr2 must be no more than 7 characters.');
        } else {
            $this->RentPaidEr2 = $item;
        }
        if ( $RentPaidEe2 == null ) {
            throw new Exception('$RentPaidEe2 must be set.');
        }
        $item = $RentPaidEe2;
        if ( strlen($item) <  ) {
            throw new Exception('$RentPaidEe2 must be at least  characters.');
        } elseif ( strlen($item) > 7 ) {
            throw new Exception('$RentPaidEe2 must be no more than 7 characters.');
        } else {
            $this->RentPaidEe2 = $item;
        }
        if ( $RentRefund2 == null ) {
            throw new Exception('$RentRefund2 must be set.');
        }
        $item = $RentRefund2;
        if ( strlen($item) <  ) {
            throw new Exception('$RentRefund2 must be at least  characters.');
        } elseif ( strlen($item) > 7 ) {
            throw new Exception('$RentRefund2 must be no more than 7 characters.');
        } else {
            $this->RentRefund2 = $item;
        }
        if ( $RentPaidErByEe2 == null ) {
            throw new Exception('$RentPaidErByEe2 must be set.');
        }
        $item = $RentPaidErByEe2;
        if ( strlen($item) <  ) {
            throw new Exception('$RentPaidErByEe2 must be at least  characters.');
        } elseif ( strlen($item) > 7 ) {
            throw new Exception('$RentPaidErByEe2 must be no more than 7 characters.');
        } else {
            $this->RentPaidErByEe2 = $item;
        }
        if ( $OverseaIncInd == null ) {
            throw new Exception('$OverseaIncInd must be set.');
        }
        $item = $OverseaIncInd;
        if ( strlen($item) < 0 ) {
            throw new Exception('$OverseaIncInd must be at least 0 characters.');
        } elseif ( strlen($item) >  ) {
            throw new Exception('$OverseaIncInd must be no more than  characters.');
        } else {
            $this->OverseaIncInd = $item;
        }
        if ( $AmtPaidOverseaCo == null ) {
            throw new Exception('$AmtPaidOverseaCo must be set.');
        }
        $item = $AmtPaidOverseaCo;
        if ( strlen($item) < 0 ) {
            throw new Exception('$AmtPaidOverseaCo must be at least 0 characters.');
        } elseif ( strlen($item) > 20 ) {
            throw new Exception('$AmtPaidOverseaCo must be no more than 20 characters.');
        } else {
            $this->AmtPaidOverseaCo = $item;
        }
        if ( $NameOfOverseaCo == null ) {
            throw new Exception('$NameOfOverseaCo must be set.');
        }
        $item = $NameOfOverseaCo;
        if ( strlen($item) < 0 ) {
            throw new Exception('$NameOfOverseaCo must be at least 0 characters.');
        } elseif ( strlen($item) > 60 ) {
            throw new Exception('$NameOfOverseaCo must be no more than 60 characters.');
        } else {
            $this->NameOfOverseaCo = $item;
        }
        if ( $AddrOfOverseaCo == null ) {
            throw new Exception('$AddrOfOverseaCo must be set.');
        }
        $item = $AddrOfOverseaCo;
        if ( strlen($item) < 0 ) {
            throw new Exception('$AddrOfOverseaCo must be at least 0 characters.');
        } elseif ( strlen($item) > 60 ) {
            throw new Exception('$AddrOfOverseaCo must be no more than 60 characters.');
        } else {
            $this->AddrOfOverseaCo = $item;
        }
        if ( $Remarks == null ) {
            throw new Exception('$Remarks must be set.');
        }
        $item = $Remarks;
        if ( strlen($item) < 0 ) {
            throw new Exception('$Remarks must be at least 0 characters.');
        } elseif ( strlen($item) > 60 ) {
            throw new Exception('$Remarks must be no more than 60 characters.');
        } else {
            $this->Remarks = $item;
        }
    }
}
